configMaps:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: website-keycloak-config
    data:
      keycloak.json: "website/keycloak.json"

  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: website-matomo-config
    data:
      analytics.json: "website/analytics.json"

services:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kompose.image-pull-secret: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
        kompose.service.type: clusterip
        kubernetes.io/ingress.class: traefik
      creationTimestamp: null
      labels:
        io.kompose.service: website
      name: website
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
      selector:
        io.kompose.service: website
      type: ClusterIP
    status:
      loadBalancer: {}

autoscaling:
  metadata:
    annotations:
      app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
      app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
      kompose.service.type: clusterip
      kubernetes.io/ingress.class: traefik
    enabled: true
    name: website
  spec:
    scaleTargetRef:
      kind: Deployment
      name: website
      apiVersion: apps/v1
    minReplicas: 2
    maxReplicas: 8
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 80
      - type: Resource
        resource:
          name: memory
          target:
            type: Utilization
            averageUtilization: 80
    behavior:
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Pods
            value: 1
            periodSeconds: 300

deployments:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kompose.image-pull-secret: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
        kompose.service.type: clusterip
        kubernetes.io/ingress.class: traefik
      labels:
        io.kompose.service: website
      name: website
    spec:
      selector:
        matchLabels:
          io.kompose.service: website
      strategy: {}
      template:
        metadata:
          annotations:
            app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
            app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
            kompose.image-pull-secret: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
            kompose.service.type: clusterip
            kubernetes.io/ingress.class: traefik
          labels:
            io.kompose.network/storage-nw: "true"
            io.kompose.network/web-nw: "true"
            io.kompose.service: website
        spec:
          containers:
            env:
              IDP_FQDN: ${IDP_FQDN}
              MATOMO_FQDN: ${MATOMO_FQDN}
              MATOMO_ID: ${ANALYTICS_MCM_WEBSITE_ID}
              API_KEY: ${CLOUD_API_KEY}
              LANDSCAPE: ${LANDSCAPE}
              DEFAULT_LIMIT: ${CLOUD_DEFAULT_LIMIT}
            image: ${WEBSITE_IMAGE_NAME}
            name: website
            ports:
              - containerPort: 80
            readinessProbe:
              httpGet:
                path: /
                port: 80
              initialDelaySeconds: 15
              timeoutSeconds: 1
            resources:
              requests:
                cpu: "500m"
                memory: "1Gi"
              limits:
                cpu: "500m"
                memory: "16Gi"
            volumeMounts:
              - mountPath: /usr/share/nginx/html/keycloak.json
                name: keycloak-config
                subPath: keycloak.json
              - mountPath: /usr/share/nginx/html/analytics.json
                name: matomo-config
                subPath: analytics.json
          imagePullSecrets:
            - name: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
          restartPolicy: Always
          securityContext:
            fsGroup: 1000
          volumes:
            - configMap:
                name: website-keycloak-config
              name: keycloak-config
            - configMap:
                name: website-matomo-config
              name: matomo-config
    status: {}

networkPolicies:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      creationTimestamp: null
      name: storage-nw
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/storage-nw: "true"
      podSelector:
        matchLabels:
          io.kompose.network/storage-nw: "true"

  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: web-nw
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  com.capgemini.mcm.ingress: "true"
      podSelector:
        matchLabels:
          io.kompose.network/web-nw: "true"

ingressRoutes:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: website
    spec:
      entryPoints:
        - web
      routes:
        - kind: Rule
          match: Host(`${WEBSITE_FQDN}`)
          middlewares:
            - name: custom-error-middleware
              namespace: traefik-int
          services:
            - name: website
              port: 80
        - kind: Rule
          match: Host(`${WEBSITE_FQDN}`) && PathPrefix(`/api/`)
          middlewares:
            - name: stripprefix
          services:
            - name: api
              namespace: api-${CLOUD_HELM_DEPLOY_NAMESPACE}
              port: 3000

middlewares:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: stripprefix
    spec:
      stripPrefix:
        prefixes:
          - /api
