configMaps:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: simulation-maas-config
    data:
      config.json: "simulation-maas/config.json"

services:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kompose.image-pull-secret: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
        kompose.service.type: clusterip
        kubernetes.io/ingress.class: traefik
      creationTimestamp: null
      labels:
        io.kompose.service: simulation-maas
      name: simulation-maas
    spec:
      ports:
        - name: "8888"
          port: 8888
          targetPort: 8888
      selector:
        io.kompose.service: simulation-maas
      type: ClusterIP
    status:
      loadBalancer: {}

deployments:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kompose.image-pull-secret: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
        kompose.service.type: clusterip
        kubernetes.io/ingress.class: traefik
      labels:
        io.kompose.service: simulation-maas
      name: simulation-maas
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: simulation-maas
      strategy: {}
      template:
        metadata:
          annotations:
            app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
            app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
            kompose.image-pull-secret: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
            kompose.service.type: clusterip
            kubernetes.io/ingress.class: traefik
          labels:
            io.kompose.network/web-nw: "true"
            io.kompose.service: simulation-maas
        spec:
          containers:
            env:
              API_FQDN: ${API_FQDN}
              IDP_FQDN: ${IDP_FQDN}
              MCM_IDP_CLIENTID_MAAS: simulation-maas
              MCM_IDP_REALM: ${IDP_MCM_REALM}
            image: ${SIMULATION_MAAS_IMAGE_NAME}
            name: simulation-maas
            ports:
              - containerPort: 8888
            resources: {}
            volumeMounts:
              - mountPath: /usr/share/nginx/html/static/config.json
                name: maas-config
                subPath: config.json
          imagePullSecrets:
            - name: ${PROXY_HANDOVER_IMAGE_PULL_SECRET_NAME}
          restartPolicy: Always
          securityContext:
            fsGroup: 1000
          volumes:
            - configMap:
                name: simulation-maas-config
              name: maas-config
    status: {}

networkPolicies:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: web-nw
    spec:
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  com.capgemini.mcm.ingress: "true"
      podSelector:
        matchLabels:
          io.kompose.network/web-nw: "true"

ingressRoutes:
  - metadata:
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
        kubernetes.io/ingress.class: traefik
      name: simulation-maas
    spec:
      entryPoints:
        - web
      routes:
        - kind: Rule
          match: Host(`${SIMULATION_MAAS_FQDN}`)
          middlewares:
            - name: custom-error-middleware
              namespace: traefik-int
          services:
            - name: simulation-maas
              port: 8888
