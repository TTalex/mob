include:
  - local: 'commons/.gitlab-ci/preview.yml'
    rules:
      - if: $CI_COMMIT_BRANCH !~ /rc-.*/ && $CI_PIPELINE_SOURCE != "trigger" && $CI_PIPELINE_SOURCE != "schedule"

.cd-to-module: &cd-to-module |
  export MODULE_PATH=${MODULE_PATH:-${MODULE_NAME}}
  [ "${GIT_STRATEGY}" != "none" ] && [ "${MODULE_PATH}" != "" ] && cd ${MODULE_PATH}

.predicate-clean-yes: &predicate-clean-yes $CLEAN_DATA == "yes"

.predicate-skip-tests-verify-yes: &predicate-skip-tests-verify-yes $SKIP_TEST == "yes"

.commons:
  variables:
    MODULE_NAME: ''
    MODULE_PATH: ''
    GIT_STRATEGY: clone
    IMAGE_TAG_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}
    BUILD_IMAGE_NAME: node:16.14.2-alpine
    REGISTRY_USER: ${CI_REGISTRY_USER}
    REGISTRY_PASSWORD: ${CI_REGISTRY_PASSWORD}
    REGISTRY_URL: ${CI_REGISTRY}
    REGISTRY_BASE_NAME: ${CI_REGISTRY_IMAGE}
    TEST_IMAGE_NAME: node:16.14.2-alpine
    NEXUS_DOCKER_REGISTRY_URL: docker-registry.streetsmart.parkeon.com:5000
    NEXUS_USER_NAME: ${streetsmart_nexus_username}
    NEXUS_USER_PWD: ${streetsmart_nexus_password}
  before_script:
    - *cd-to-module

.no-dependencies:
  dependencies: []

.no-needs:
  needs: []

.manual:
  when: manual

.except-clean-or-release:
  except:
    variables:
      - *predicate-clean-yes
    refs:
      - triggers

.only-branches:
  only:
    refs:
      - branches

.only-master:
  only:
    refs:
      - master

# Commons job dedicated to build application
.build-job-tags:
  tags:
    - os:linux
    - task:build

.build-n-sast-job-tags:
  tags:
    - os:linux
    # - task:build-n-sast
    #
.build-job:
  extends:
    - .commons
    - .build-job-tags
    - .except-clean-or-release
    - .only-branches
  stage: build
  image: ${BUILD_IMAGE_NAME}

# Commons jobs dedicated to build docker image of application
.declare-image-functions: &declare-image-functions |
  function image {
    docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD} ${REGISTRY_URL}
    docker login -u ${NEXUS_USER_NAME} -p ${NEXUS_USER_PWD} ${NEXUS_DOCKER_REGISTRY_URL}

    docker-compose --file ${COMPOSE_FILENAME} build
    docker-compose --file ${COMPOSE_FILENAME} push
  }

.image-job-tags:
  tags:
    - os:linux
    - task:image

.image-job:
  extends:
    - .commons
    - .image-job-tags
    - .only-branches
    - .except-clean-or-release
  stage: image
  variables:
    COMPOSE_FILENAME: kompose.yml
  image: tiangolo/docker-with-compose:2021-09-18
  before_script:
    - *cd-to-module
    - *declare-image-functions
  script:
    - |
      image

.default-image-job:
  extends:
    - .image-job
  variables:
    IMAGE_TAG_NAME: ${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}

# Commons jobs dedicated to test application

.test-job-tags:
  tags:
    - os:linux
    - task:test

.except-all:
  except:
    variables:
      - *predicate-clean-yes
      - *predicate-skip-tests-verify-yes
    refs:
      - triggers

.test-job:
  stage: test
  extends:
    - .commons
    - .test-job-tags
    - .only-branches
    - .except-all
  artifacts:
    paths:
      - ${MODULE_PATH:-${MODULE_NAME}}/junit.xml
      - ${MODULE_PATH:-${MODULE_NAME}}/coverage
    when: always
    reports:
      junit:
        - ${MODULE_PATH:-${MODULE_NAME}}/junit.xml
    expire_in: 5 days
