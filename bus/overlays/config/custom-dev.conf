loopback_users.guest = false
# Authentication and authorizarion - oauth2 otherwise internal (avoid internal as much as possible) - See https://www.rabbitmq.com/access-control.html
auth_backends.1 = rabbit_auth_backend_oauth2
auth_backends.2 = rabbit_auth_backend_internal
auth_oauth2.resource_server_id = rabbitmq
auth_oauth2.jwks_url = https://${IDP_FQDN}/auth/realms/${IDP_MCM_REALM}/protocol/openid-connect/certs

# Logging - See https://www.rabbitmq.com/logging.html#connection-lifecycle-events
log.default.level = info
log.connection.level = debug

# Kubernetes discovery to set up a real cluster - See https://www.rabbitmq.com/cluster-formation.html#peer-discovery-k8s
#cluster_formation.peer_discovery_backend = rabbit_peer_discovery_k8s

# Monitoring with Prometheus and Grafana - See https://www.rabbitmq.com/prometheus.html

# For production use
# disk_free_limit.relative = 1.5
